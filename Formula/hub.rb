# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Hub < Formula
  desc "Hub CLI is stack composition and lifecycle tool."
  homepage "https://superhub.io/"
  version "1.0.7"
  license "GPLv3"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/agilestacks/hub/releases/download/v1.0.7/hub_Darwin_arm64.tar.gz"
      sha256 "31b8964a5164fab5d78dff96680033ca0ca439ec0677b7d4c4372a540c8f3b05"

      def install
        bin.install "hub"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/agilestacks/hub/releases/download/v1.0.7/hub_Darwin_x86_64.tar.gz"
      sha256 "36390716d6233ab1a3c9535269f837b026e1f5ae0efbb23357183a6845176af1"

      def install
        bin.install "hub"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/agilestacks/hub/releases/download/v1.0.7/hub_Linux_x86_64.tar.gz"
      sha256 "e471c113a0deda0eeb54a2293fb952a8e5073b430921b4d9d643ddb211991e04"

      def install
        bin.install "hub"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/agilestacks/hub/releases/download/v1.0.7/hub_Linux_arm64.tar.gz"
      sha256 "0eaf875e739fad0e4d584da01f11137a1633c0c2beb4dba04abd2c7eae954979"

      def install
        bin.install "hub"
      end
    end
  end

  head "https://github.com/asibot/hub"

  depends_on "jq"
  depends_on "yq"
  depends_on "npm" => :optional

  def post_install
    hub_home = Pathname.new "#{Dir.home}/.hub"
    unless hub_home.exist?
        system "#{Formula["hub"].opt_bin}/hub", "extensions", "install"
    end
  end

  def caveats; <<~EOS
    hub version
    hub help
    hub elaborate hub.yaml params.yaml -o hub.yaml.elaborate
    hub deploy hub.yaml.elaborate -e NAME=stage
  EOS
  end

  test do
    output = shell_output("#{bin}/hub version").chomp
    assert output.start_with?("Hub CLI git ")
    system "false"
  end
end
