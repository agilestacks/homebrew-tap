# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Hub < Formula
  desc "Hub CLI is stack composition and lifecycle tool."
  homepage "https://superhub.io/"
  version "1.0.9"
  license "GPLv3"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/agilestacks/hub/releases/download/v1.0.9/hub_Darwin_arm64.tar.gz"
      sha256 "eb25e7ce05a24d0199dc4cfc5aa00d882e1e1ce09cff69b1efcd1d223827d7f0"

      def install
        bin.install "hub"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/agilestacks/hub/releases/download/v1.0.9/hub_Darwin_x86_64.tar.gz"
      sha256 "d7127fa1acc8bceadd0d895544d6cf69a35b41a1b853dac5f01512e31f043cf4"

      def install
        bin.install "hub"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/agilestacks/hub/releases/download/v1.0.9/hub_Linux_arm64.tar.gz"
      sha256 "7da2e9407c94e0c2128553f357e56af5c184c587ba151d263293c21f7f9fc980"

      def install
        bin.install "hub"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/agilestacks/hub/releases/download/v1.0.9/hub_Linux_x86_64.tar.gz"
      sha256 "729782d421c7aa6f855cb966d66099b76b5d9a49ac376d04da8825427c8a4c20"

      def install
        bin.install "hub"
      end
    end
  end

  head "https://github.com/asibot/hub"

  depends_on "jq"
  depends_on "yq"
  depends_on "npm" => :optional

  def post_install
    hub_home = Pathname.new "#{Dir.home}/.hub"
    unless hub_home.exist?
        system "#{Formula["hub"].opt_bin}/hub", "extensions", "install"
    end
  end

  def caveats; <<~EOS
    hub version
    hub help
    hub elaborate hub.yaml params.yaml -o hub.yaml.elaborate
    hub deploy hub.yaml.elaborate -e NAME=stage
  EOS
  end

  test do
    output = shell_output("#{bin}/hub version").chomp
    assert output.start_with?("Hub CLI git ")
    system "false"
  end
end
